/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/v1/auth/check-email": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Check if email is whitelisted for login
         * @description Validates that an email exists in raw_mentees, raw_mentors, or raw_users tables before allowing magic link send
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /** Format: email */
                        email: string;
                    };
                };
            };
            responses: {
                /** @description Email whitelist status */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            isWhitelisted: boolean;
                            /** Format: email */
                            email: string;
                        };
                    };
                };
                /** @description Invalid request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                code: string;
                                message: string;
                                timestamp: string;
                            };
                        };
                    };
                };
                /** @description Internal Server Error */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                code: string;
                                message: string;
                                timestamp: string;
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/users/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get current user profile
         * @description Returns the authenticated user with their profile information
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Current user with profile */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** Format: uuid */
                            id: string;
                            airtable_record_id: string | null;
                            /** Format: email */
                            email: string;
                            /** @enum {string} */
                            role: "mentee" | "mentor" | "coordinator";
                            /** Format: date-time */
                            created_at: string;
                            /** Format: date-time */
                            updated_at: string;
                            profile: {
                                /** Format: uuid */
                                id: string;
                                /** Format: uuid */
                                user_id: string;
                                name: string;
                                title: string | null;
                                company: string | null;
                                bio: string | null;
                                /** Format: date-time */
                                created_at: string;
                                /** Format: date-time */
                                updated_at: string;
                            };
                        };
                    };
                };
                /** @description Unauthorized - Missing or invalid token */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                code: string;
                                message: string;
                                timestamp: string;
                            };
                        };
                    };
                };
                /** @description User not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                code: string;
                                message: string;
                                timestamp: string;
                            };
                        };
                    };
                };
            };
        };
        /**
         * Update current user profile
         * @description Updates the authenticated user's profile information
         */
        put: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        name?: string;
                        bio?: string;
                        title?: string;
                        company?: string;
                    };
                };
            };
            responses: {
                /** @description Updated user with profile */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** Format: uuid */
                            id: string;
                            airtable_record_id: string | null;
                            /** Format: email */
                            email: string;
                            /** @enum {string} */
                            role: "mentee" | "mentor" | "coordinator";
                            /** Format: date-time */
                            created_at: string;
                            /** Format: date-time */
                            updated_at: string;
                            profile: {
                                /** Format: uuid */
                                id: string;
                                /** Format: uuid */
                                user_id: string;
                                name: string;
                                title: string | null;
                                company: string | null;
                                bio: string | null;
                                /** Format: date-time */
                                created_at: string;
                                /** Format: date-time */
                                updated_at: string;
                            };
                        };
                    };
                };
                /** @description Bad Request - Validation error */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                code: string;
                                message: string;
                                timestamp: string;
                            };
                        };
                    };
                };
                /** @description Unauthorized - Missing or invalid token */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                code: string;
                                message: string;
                                timestamp: string;
                            };
                        };
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * List users
         * @description Returns a list of users, optionally filtered by role
         */
        get: {
            parameters: {
                query?: {
                    role?: "mentee" | "mentor" | "coordinator";
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description List of users */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** Format: uuid */
                            id: string;
                            airtable_record_id: string | null;
                            /** Format: email */
                            email: string;
                            /** @enum {string} */
                            role: "mentee" | "mentor" | "coordinator";
                            /** Format: date-time */
                            created_at: string;
                            /** Format: date-time */
                            updated_at: string;
                            profile: {
                                /** Format: uuid */
                                id: string;
                                /** Format: uuid */
                                user_id: string;
                                name: string;
                                title: string | null;
                                company: string | null;
                                bio: string | null;
                                /** Format: date-time */
                                created_at: string;
                                /** Format: date-time */
                                updated_at: string;
                            };
                        }[];
                    };
                };
                /** @description Unauthorized - Missing or invalid token */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                code: string;
                                message: string;
                                timestamp: string;
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/users/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get public user profile
         * @description Returns a user's public profile information by user ID
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    id: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Public user profile */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** Format: uuid */
                            id: string;
                            airtable_record_id: string | null;
                            /** Format: email */
                            email: string;
                            /** @enum {string} */
                            role: "mentee" | "mentor" | "coordinator";
                            /** Format: date-time */
                            created_at: string;
                            /** Format: date-time */
                            updated_at: string;
                            profile: {
                                /** Format: uuid */
                                id: string;
                                /** Format: uuid */
                                user_id: string;
                                name: string;
                                title: string | null;
                                company: string | null;
                                bio: string | null;
                                /** Format: date-time */
                                created_at: string;
                                /** Format: date-time */
                                updated_at: string;
                            };
                        };
                    };
                };
                /** @description Unauthorized - Missing or invalid token */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                code: string;
                                message: string;
                                timestamp: string;
                            };
                        };
                    };
                };
                /** @description User not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                code: string;
                                message: string;
                                timestamp: string;
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/availability": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get availability blocks for authenticated mentor
         * @description Returns all availability blocks for the authenticated mentor. Only mentors can access this endpoint.
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description List of availability blocks */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** Format: uuid */
                            id: string;
                            /** Format: uuid */
                            mentor_id: string;
                            /** @enum {string} */
                            recurrence_pattern: "one_time" | "weekly" | "monthly";
                            start_date: string | null;
                            end_date: string | null;
                            /** Format: date-time */
                            start_time: string;
                            /** Format: date-time */
                            end_time: string;
                            slot_duration_minutes: number;
                            buffer_minutes: number;
                            /** @enum {string} */
                            meeting_type: "online" | "in_person_preset" | "in_person_custom";
                            /** Format: uuid */
                            location_preset_id: string | null;
                            location_custom: string | null;
                            description: string | null;
                            /** Format: date-time */
                            created_at: string;
                            /** Format: date-time */
                            updated_at: string;
                            /** Format: uuid */
                            created_by: string;
                            /** Format: uuid */
                            updated_by: string;
                        }[];
                    };
                };
                /** @description Unauthorized - Missing or invalid token */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                code: string;
                                message: string;
                                timestamp: string;
                                details?: {
                                    [key: string]: unknown;
                                };
                            };
                        };
                    };
                };
                /** @description Forbidden - User is not a mentor */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                code: string;
                                message: string;
                                timestamp: string;
                                details?: {
                                    [key: string]: unknown;
                                };
                            };
                        };
                    };
                };
                /** @description Internal Server Error - Failed to fetch availability blocks */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                code: string;
                                message: string;
                                timestamp: string;
                                details?: {
                                    [key: string]: unknown;
                                };
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        /**
         * Create availability block (one-time only)
         * @description Creates a new one-time availability block for a mentor. Only mentors can create availability blocks. Recurrence patterns and in-person meeting types are not yet supported.
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            /** @description Availability block data */
            requestBody: {
                content: {
                    "application/json": {
                        /** Format: date-time */
                        start_time: string;
                        /** Format: date-time */
                        end_time: string;
                        slot_duration_minutes: ("15" | "20" | "30" | "60") | number;
                        /** @default 0 */
                        buffer_minutes?: number;
                        /** @enum {string} */
                        meeting_type: "online";
                        description?: string;
                    };
                };
            };
            responses: {
                /** @description Availability block created successfully */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** Format: uuid */
                            id: string;
                            /** Format: uuid */
                            mentor_id: string;
                            /** @enum {string} */
                            recurrence_pattern: "one_time" | "weekly" | "monthly";
                            start_date: string | null;
                            end_date: string | null;
                            /** Format: date-time */
                            start_time: string;
                            /** Format: date-time */
                            end_time: string;
                            slot_duration_minutes: number;
                            buffer_minutes: number;
                            /** @enum {string} */
                            meeting_type: "online" | "in_person_preset" | "in_person_custom";
                            /** Format: uuid */
                            location_preset_id: string | null;
                            location_custom: string | null;
                            description: string | null;
                            /** Format: date-time */
                            created_at: string;
                            /** Format: date-time */
                            updated_at: string;
                            /** Format: uuid */
                            created_by: string;
                            /** Format: uuid */
                            updated_by: string;
                        };
                    };
                };
                /** @description Bad Request - Validation error or invalid meeting type */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                code: string;
                                message: string;
                                timestamp: string;
                                details?: {
                                    [key: string]: unknown;
                                };
                            };
                        };
                    };
                };
                /** @description Unauthorized - Missing or invalid token */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                code: string;
                                message: string;
                                timestamp: string;
                                details?: {
                                    [key: string]: unknown;
                                };
                            };
                        };
                    };
                };
                /** @description Forbidden - User is not a mentor */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                code: string;
                                message: string;
                                timestamp: string;
                                details?: {
                                    [key: string]: unknown;
                                };
                            };
                        };
                    };
                };
                /** @description Internal Server Error - Failed to create availability block */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                code: string;
                                message: string;
                                timestamp: string;
                                details?: {
                                    [key: string]: unknown;
                                };
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/availability/slots": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get available time slots
         * @description Returns available (non-booked) time slots with mentor information. Supports filtering by mentor, date range, and meeting type.
         */
        get: {
            parameters: {
                query?: {
                    mentor_id?: string;
                    start_date?: string;
                    end_date?: string;
                    meeting_type?: "online" | "in_person";
                    limit?: number;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description List of available time slots */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            slots: {
                                /** Format: uuid */
                                id: string;
                                /** Format: uuid */
                                availability_id: string;
                                /** Format: uuid */
                                mentor_id: string;
                                /** Format: date-time */
                                start_time: string;
                                /** Format: date-time */
                                end_time: string;
                                slot_duration_minutes: number;
                                is_booked: boolean;
                                mentor: {
                                    /** Format: uuid */
                                    id: string;
                                    name: string;
                                    /** Format: uri */
                                    avatar_url: string | null;
                                };
                                /** Format: date-time */
                                created_at: string;
                            }[];
                            pagination: {
                                total: number;
                                limit: number;
                                has_more: boolean;
                            };
                        };
                    };
                };
                /** @description Unauthorized - Missing or invalid token */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                code: string;
                                message: string;
                                timestamp: string;
                                details?: {
                                    [key: string]: unknown;
                                };
                            };
                        };
                    };
                };
                /** @description Internal Server Error - Failed to fetch available slots */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                code: string;
                                message: string;
                                timestamp: string;
                                details?: {
                                    [key: string]: unknown;
                                };
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/bookings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create a new booking
         * @description Book a mentor time slot (Epic 0: Simple booking - no calendar integration, no confirmation flow, status always pending)
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /** Format: uuid */
                        time_slot_id: string;
                        meeting_goal: string;
                    };
                };
            };
            responses: {
                /** @description Booking created successfully */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** Format: uuid */
                            id: string;
                            /** Format: uuid */
                            time_slot_id: string;
                            /** Format: uuid */
                            mentor_id: string;
                            /** Format: uuid */
                            mentee_id: string;
                            meeting_goal: string;
                            /** @enum {string} */
                            status: "pending" | "confirmed" | "completed" | "canceled" | "expired";
                            /** Format: date-time */
                            meeting_start_time: string;
                            /** Format: date-time */
                            meeting_end_time: string;
                            /** Format: date-time */
                            created_at: string;
                            /** Format: date-time */
                            updated_at: string;
                        };
                    };
                };
                /** @description Invalid request - Validation errors (meeting_goal too short, invalid UUID) */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                code: string;
                                message: string;
                                timestamp: string;
                                details?: {
                                    [key: string]: unknown;
                                };
                            };
                        };
                    };
                };
                /** @description Unauthorized - Missing or invalid JWT token */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                code: string;
                                message: string;
                                timestamp: string;
                                details?: {
                                    [key: string]: unknown;
                                };
                            };
                        };
                    };
                };
                /** @description Time slot not found */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                code: string;
                                message: string;
                                timestamp: string;
                                details?: {
                                    [key: string]: unknown;
                                };
                            };
                        };
                    };
                };
                /** @description Slot already booked - Concurrent booking detected */
                409: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                code: string;
                                message: string;
                                timestamp: string;
                                details?: {
                                    [key: string]: unknown;
                                };
                            };
                        };
                    };
                };
                /** @description Internal Server Error - Failed to create booking */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                code: string;
                                message: string;
                                timestamp: string;
                                details?: {
                                    [key: string]: unknown;
                                };
                            };
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/bookings/my-bookings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get all bookings for current user
         * @description Returns all bookings where the authenticated user is either the mentor or mentee, with expanded relations for mentor, mentee, and time_slot data
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description List of user bookings with expanded relations */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            bookings: {
                                /** Format: uuid */
                                id: string;
                                /** Format: uuid */
                                mentor_id: string;
                                /** Format: uuid */
                                mentee_id: string;
                                /** Format: uuid */
                                time_slot_id: string;
                                /** @enum {string} */
                                status: "pending" | "confirmed" | "completed" | "canceled" | "expired";
                                meeting_goal: string;
                                materials_urls: string[];
                                /** Format: date-time */
                                created_at: string;
                                /** Format: date-time */
                                updated_at: string;
                                time_slot: {
                                    /** Format: date-time */
                                    start_time: string;
                                    /** Format: date-time */
                                    end_time: string;
                                    /** Format: uuid */
                                    mentor_id: string;
                                };
                                mentor: {
                                    /** Format: uuid */
                                    id: string;
                                    profile: {
                                        name: string;
                                        avatar_url: string | null;
                                    };
                                };
                                mentee: {
                                    /** Format: uuid */
                                    id: string;
                                    profile: {
                                        name: string;
                                        avatar_url: string | null;
                                    };
                                };
                            }[];
                        };
                    };
                };
                /** @description Unauthorized - Missing or invalid JWT token */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                code: string;
                                message: string;
                                timestamp: string;
                                details?: {
                                    [key: string]: unknown;
                                };
                            };
                        };
                    };
                };
                /** @description Internal Server Error - Failed to fetch bookings */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            error: {
                                code: string;
                                message: string;
                                timestamp: string;
                                details?: {
                                    [key: string]: unknown;
                                };
                            };
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
